#!/usr/bin/env python3
# -*- coding: utf-8 -*-
'''
Gobuster Module
'''

import os
import configparser
import sys

from core.config import cfg

CFG = configparser.ConfigParser()
CFG.read('config.ini')

class GoBusterModule:
    '''Class GoBusterModule'''
    @staticmethod
    def display_wordlists_filenames(wordlist_dir):
        '''Get all wordlists filenames function'''
        i = 0
        for root, dirs, files in os.walk(wordlist_dir):
            for filename in files:
                print(str(i) + ' - ' + filename)
                i = i+1

    @staticmethod
    def get_selected_wordlist(wordlist_dir, number):
        '''Get the selected wordlist function'''
        i = 0
        for root, dirs, files in os.walk(wordlist_dir):
            for filename in files:
                if int(number) == i:
                    return filename
                i = i+1
        return None

    @staticmethod
    def start_webfuzz():
        '''Start webfuzz function'''
        output_dir = os.path.abspath('{}/{}'.format(cfg.get().output_dir, 'WEBFUZZ'))
        scan_all = CFG['GOBUSTER']['SCAN_ALL_WORDLISTS']
        gobuster_path = CFG['GOBUSTER']['GOBUSTER_PATH']
        gobuster_url_path = CFG['GOBUSTER']['GOBUSTER_URL_PATH']
        gobuster_args = CFG['GOBUSTER']['ARGS']

        wordlist_dir = os.path.abspath('core/modules/gobuster/wordlists/')

        cmd = ''

        if not os.path.exists(output_dir + gobuster_path):
            os.makedirs(output_dir + gobuster_path)

        if scan_all == 'Y':
            for root, dirs, files in os.walk(wordlist_dir):
                for filename in files:
                    fullpath_file = '{}/{}'.format(wordlist_dir, filename)
                    cmd = "cd {} && ./gobuster dir -u {}{} {} -w {} -o {}" \
                            .format(gobuster_path, cfg.get().url, gobuster_url_path,
                                    gobuster_args, fullpath_file, '{}/{}'
                                    .format(output_dir, filename))
                    os.system(cmd)

        elif scan_all == 'N':
            GoBusterModule.display_wordlists_filenames(wordlist_dir)
            print('Select your wordlist number:')

            number = input()
            if not number.isdigit():
                print('error: you need to select a number')
                sys.exit(0)

            wordlist = GoBusterModule.get_selected_wordlist(wordlist_dir, number)
            print('Selected wordlist: {}'.format(wordlist))

            fullpath_file = '{}/{}'.format(wordlist_dir, wordlist)
            cmd = "cd {} && ./gobuster dir -u {}{} {} -w {} -o {}" \
                    .format(gobuster_path, cfg.get().url, gobuster_url_path,
                            gobuster_args, fullpath_file, '{}/{}'
                            .format(output_dir, wordlist))

            answer = 'Y'
            print('CMD: {}'.format(cmd))
            print('Do you want to start it ? (Y/n)')
            answer = input()
            if 'Y' in answer or '' in answer:
                os.system(cmd)
            else:
                sys.exit(0)
        else:
            print('You need to configure your gobuster options correctly ' \
                    '(Y or N for the SCAN_ALL_WORDLISTS option)')
            sys.exit(0)
